{"version":3,"sources":["images/Amr.jpg","Components/AppQuiz/Answers.js","Components/AppQuiz/Questions.js","Components/AppQuiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Answers","props","answers","clicked","clickedAnswers","correctAnswers","score","questions","answer","Object","keys","disabled","className","map","qAnswer","i","key","onClick","role","aria-label","length","Questions","Quiz","1","2","3","rightAnswers","useState","setCorrectAnswers","setScore","step","setStep","setClickedAnswers","src","img","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a2020c65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Amr.bd5e3ba1.jpg\";","import React from \"react\";\r\n\r\nconst Answers = (props) => {\r\n  const {\r\n    answers,\r\n    clicked,\r\n    clickedAnswers,\r\n    correctAnswers,\r\n    score,\r\n    questions,\r\n  } = props;\r\n  const answer = Object.keys(answers);\r\n  const renderAnswers = () => {\r\n    return answer.map((qAnswer, i) => (\r\n      <li\r\n        key={i}\r\n        className={\r\n          correctAnswers === qAnswer\r\n            ? \"correct\"\r\n            : clickedAnswers === qAnswer\r\n            ? \"incorrect\"\r\n            : \"\"\r\n        }\r\n        onClick={() => clicked(qAnswer)}\r\n      >\r\n        {answers[qAnswer]}\r\n      </li>\r\n    ));\r\n  };\r\n  return (\r\n    <ul disabled={clickedAnswers ? true : false} className=\"answers\">\r\n      {renderAnswers()}\r\n      <p className=\"answerEvaluation\">\r\n        {correctAnswers ? (\r\n          <span role=\"img\" aria-label=\"Fire\">\r\n            Correct Answers 😉\r\n          </span>\r\n        ) : clickedAnswers ? (\r\n          <span role=\"img\" aria-label=\"Fire\">\r\n            Incorrect Answers 😢\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </p>\r\n      <p className=\"result__answer\">\r\n        Your score {score} Of {Object.keys(questions).length}\r\n      </p>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import React from \"react\";\r\n\r\nconst Questions = (props) => {\r\n  const { questions } = props;\r\n  const renderQuestions = () => {\r\n    return questions;\r\n  };\r\n  return <div className=\"question\">{renderQuestions()}</div>;\r\n};\r\n\r\nexport default Questions;\r\n","import React, { useState } from \"react\";\r\nimport Answers from \"./Answers\";\r\nimport Questions from \"./Questions\";\r\nimport img from \"../../images/Amr.jpg\";\r\n\r\nconst Quiz = () => {\r\n  const questions = {\r\n    1: \"What`s my name ?\",\r\n    2: \"where do i work ?\",\r\n    3: \"How old me ?\",\r\n  };\r\n  const answers = {\r\n    1: {\r\n      1: \"Ahmed\",\r\n      2: \"Mohamed\",\r\n      3: \"Ramy\",\r\n    },\r\n    2: {\r\n      1: \"Royal Cup\",\r\n      2: \"Brazilian Coffee House\",\r\n      3: \" Not Work\",\r\n    },\r\n    3: {\r\n      1: 22,\r\n      2: 50,\r\n      3: 30,\r\n    },\r\n  };\r\n  const rightAnswers = { 1: \"1\", 2: \"2\", 3: \"1\" };\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [step, setStep] = useState(1);\r\n  const [clickedAnswers, setClickedAnswers] = useState(0);\r\n\r\n  const clicked = (answer) => {\r\n    if (answer === rightAnswers[step]) {\r\n      setScore(score + 1);\r\n      setClickedAnswers(answer);\r\n      setCorrectAnswers(rightAnswers[step]);\r\n    } else {\r\n      setClickedAnswers(answer);\r\n      setCorrectAnswers(0);\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    setStep(step + 1);\r\n    setCorrectAnswers(0);\r\n    setClickedAnswers(0);\r\n  };\r\n\r\n  const previousPage = () => {\r\n    if (step > 1) {\r\n      setStep(step - 1);\r\n      if (score === 0) {\r\n        setScore(0);\r\n      } else {\r\n        setScore(score - 1);\r\n      }\r\n    } else if (step === 1) {\r\n      setStep(step);\r\n    }\r\n    setCorrectAnswers(0);\r\n    setClickedAnswers(0);\r\n  };\r\n\r\n  const renderQuiz = () => {\r\n    return (\r\n      <div className=\"content\">\r\n        {step <= Object.keys(questions).length ? (\r\n          <>\r\n            <Questions questions={questions[step]} />\r\n            <Answers\r\n              correctAnswers={correctAnswers}\r\n              clicked={clicked}\r\n              clickedAnswers={clickedAnswers}\r\n              answers={answers[step]}\r\n              questions={questions}\r\n              score={score}\r\n            />\r\n            <button\r\n              disabled={step > 1 ? false : true}\r\n              onClick={() => previousPage()}\r\n              className=\"previous\"\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              disabled={clickedAnswers ? false : true}\r\n              onClick={() => nextPage()}\r\n              className=\"next\"\r\n            >\r\n              Next\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>\r\n              Now Your finish questions\r\n              <span className=\"emoji\" role=\"img\" aria-label=\"Fire\">\r\n                😉\r\n              </span>\r\n            </h1>\r\n            <p>\r\n              Your Score : {score} Of {Object.keys(questions).length}\r\n            </p>\r\n            <div className=\"thank\">\r\n              <h2>\r\n                Thanks Amr\r\n                <span role=\"img\" aria-label=\"Fire\">\r\n                  😀🙏🏼\r\n                </span>\r\n              </h2>\r\n              <img className=\"thank__img\" src={img} alt=\"thanks amr\" />\r\n              <p>\r\n                Thank you very much eng. Amr. I really do not believe the level\r\n                I have reached and God willing, for the better\r\n                <span role=\"img\" aria-label=\"Fire\">\r\n                  🥰😍\r\n                </span>\r\n                . and wish you the best in life and work , and congratulations\r\n                to nearly 1,000 subscribers\r\n                <span role=\"img\" aria-label=\"Fire\">\r\n                  🥳🔥\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  return <>{renderQuiz()}</>;\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\nimport AppQuiz from \"./Components/AppQuiz/Quiz\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppQuiz />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}